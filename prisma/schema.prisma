// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  username    String    @unique
  email       String    @unique

  passwordAuth PasswordAuth?
  googleAuth   GoogleAuth?

  role String @default("user")
}

model PasswordAuth {
  id       String @id @default(uuid())
  password String
  userId   String @unique
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model GoogleAuth {
  id           String  @id @default(uuid())
  googleId     String  @unique
  userId       String  @unique
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum FormFieldType {
  TEXT
  NUMBER
  DATE
  TIME
}

model Form {
  id          String        @id @default(uuid())
  name        String
  description String?

  fields      FormField[]
  formResponses FormResponse[]
}

model FormField {
  id          String         @id @default(uuid())
  name        String
  type        FormFieldType
  required    Boolean        @default(false)
  formId      String
  form        Form           @relation(fields: [formId], references: [id], onDelete: Cascade)
}

model FormResponse {
  id        String      @id @default(uuid())
  formId    String
  form      Form        @relation(fields: [formId], references: [id], onDelete: Cascade)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  responses Json
}